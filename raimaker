#include "RMaker.h"
#include "WiFi.h"
#include "WiFiProv.h"
#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

const uint16_t kIrLed = 10;  // Substitua com o pino correto para o LED IR
IRsend irsend(kIrLed);      // InstÃ¢ncia IRsend

const char *service_name = "PROV_ESPR1";
const char *pop = "12345";

bool switch1_state = false;
bool switch2_state = false;

static Switch *switch1 = NULL;
static Switch *switch2 = NULL;

void ligarTv() {
    irsend.sendNikai(0xD5F2A, 24);
}

void desligarTv() {
    irsend.sendNikai(0xD5F2A, 24);
}

void write_callback(Device *device, Param *param, const param_val_t val,
  void *priv_data, write_ctx_t *ctx) {
    const char *param_name = param->getParamName();
    if (strcmp(param_name, "Power") == 0) {
        switch1_state = val.val.b;
        if (switch1_state) {
            ligarTv();  // Enviar sinal IR quando o switch for ativado
        }
        param->updateAndReport(val);
    }
}

void write_callback2(Device *device, Param *param, const param_val_t val,
  void *priv_data, write_ctx_t *ctx) {
    const char *param_name = param->getParamName();
    if (strcmp(param_name, "Power") == 0) {
        switch2_state = val.val.b;
        if (switch2_state) {
            desligarTv();
        }
        param->updateAndReport(val);
    }
}

void setup() {
  irsend.begin();
  Node my_node;
  my_node = RMaker.initNode("ESP RainMaker Node");

  switch1 = new Switch("Ligar TV", NULL);
  if (!switch1) {
    return;
  }

  switch2 = new Switch("Desligar TV", NULL);
  if (!switch2) {
      return;
  }

  switch1->addCb(write_callback);
  my_node.addDevice(*switch1);

  switch2->addCb(write_callback2);
  my_node.addDevice(*switch2);

  RMaker.start();
  WiFiProv.beginProvision(WIFI_PROV_SCHEME_BLE, WIFI_PROV_SCHEME_HANDLER_FREE_BTDM, WIFI_PROV_SECURITY_1, pop, service_name);
}

void loop() {
    // Loop vazio
}

void Send_Sensor()
{
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  temperature.updateAndReportParam("Temperature", t);
  humidity.updateAndReportParam("Temperature", h);
}
